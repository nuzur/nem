// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: connection_type_config.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectionTypeConfig struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	TcpIp         *TcpIpConnectionTypeConfig    `protobuf:"bytes,1,opt,name=tcp_ip,json=tcpIp,proto3" json:"tcp_ip,omitempty"`
	TcpIpSsh      *TcpIpSshConnectionTypeConfig `protobuf:"bytes,2,opt,name=tcp_ip_ssh,json=tcpIpSsh,proto3" json:"tcp_ip_ssh,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionTypeConfig) Reset() {
	*x = ConnectionTypeConfig{}
	mi := &file_connection_type_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionTypeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionTypeConfig) ProtoMessage() {}

func (x *ConnectionTypeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_connection_type_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionTypeConfig.ProtoReflect.Descriptor instead.
func (*ConnectionTypeConfig) Descriptor() ([]byte, []int) {
	return file_connection_type_config_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectionTypeConfig) GetTcpIp() *TcpIpConnectionTypeConfig {
	if x != nil {
		return x.TcpIp
	}
	return nil
}

func (x *ConnectionTypeConfig) GetTcpIpSsh() *TcpIpSshConnectionTypeConfig {
	if x != nil {
		return x.TcpIpSsh
	}
	return nil
}

var File_connection_type_config_proto protoreflect.FileDescriptor

const file_connection_type_config_proto_rawDesc = "" +
	"\n" +
	"\x1cconnection_type_config.proto\x12\x03nem\x1a#tcp_ip_connection_type_config.proto\x1a'tcp_ip_ssh_connection_type_config.proto\"\x8e\x01\n" +
	"\x14ConnectionTypeConfig\x125\n" +
	"\x06tcp_ip\x18\x01 \x01(\v2\x1e.nem.TcpIpConnectionTypeConfigR\x05tcpIp\x12?\n" +
	"\n" +
	"tcp_ip_ssh\x18\x02 \x01(\v2!.nem.TcpIpSshConnectionTypeConfigR\btcpIpSshB;\n" +
	"\x14github.com/nuzur/nemB\x14ConnectionTypeConfigP\x01Z\vnem/idl/genb\x06proto3"

var (
	file_connection_type_config_proto_rawDescOnce sync.Once
	file_connection_type_config_proto_rawDescData []byte
)

func file_connection_type_config_proto_rawDescGZIP() []byte {
	file_connection_type_config_proto_rawDescOnce.Do(func() {
		file_connection_type_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_connection_type_config_proto_rawDesc), len(file_connection_type_config_proto_rawDesc)))
	})
	return file_connection_type_config_proto_rawDescData
}

var file_connection_type_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_connection_type_config_proto_goTypes = []any{
	(*ConnectionTypeConfig)(nil),         // 0: nem.ConnectionTypeConfig
	(*TcpIpConnectionTypeConfig)(nil),    // 1: nem.TcpIpConnectionTypeConfig
	(*TcpIpSshConnectionTypeConfig)(nil), // 2: nem.TcpIpSshConnectionTypeConfig
}
var file_connection_type_config_proto_depIdxs = []int32{
	1, // 0: nem.ConnectionTypeConfig.tcp_ip:type_name -> nem.TcpIpConnectionTypeConfig
	2, // 1: nem.ConnectionTypeConfig.tcp_ip_ssh:type_name -> nem.TcpIpSshConnectionTypeConfig
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_connection_type_config_proto_init() }
func file_connection_type_config_proto_init() {
	if File_connection_type_config_proto != nil {
		return
	}
	file_tcp_ip_connection_type_config_proto_init()
	file_tcp_ip_ssh_connection_type_config_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_connection_type_config_proto_rawDesc), len(file_connection_type_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_connection_type_config_proto_goTypes,
		DependencyIndexes: file_connection_type_config_proto_depIdxs,
		MessageInfos:      file_connection_type_config_proto_msgTypes,
	}.Build()
	File_connection_type_config_proto = out.File
	file_connection_type_config_proto_goTypes = nil
	file_connection_type_config_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: service_nem.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// team start
type ListTeamsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of records to return. The service may return fewer than
	// this value.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// https://google.aip.dev/160
	// https://pkg.go.dev/go.einride.tech/aip@v0.67.1
	// https://github.com/einride/aip-go
	Filter        string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy       string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTeamsRequest) Reset() {
	*x = ListTeamsRequest{}
	mi := &file_service_nem_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTeamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamsRequest) ProtoMessage() {}

func (x *ListTeamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamsRequest.ProtoReflect.Descriptor instead.
func (*ListTeamsRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{0}
}

func (x *ListTeamsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListTeamsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListTeamsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListTeamsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListTeamsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Teams []*Team                `protobuf:"bytes,1,rep,name=teams,proto3" json:"teams,omitempty"`
	// A token that can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTeamsResponse) Reset() {
	*x = ListTeamsResponse{}
	mi := &file_service_nem_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTeamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeamsResponse) ProtoMessage() {}

func (x *ListTeamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeamsResponse.ProtoReflect.Descriptor instead.
func (*ListTeamsResponse) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{1}
}

func (x *ListTeamsResponse) GetTeams() []*Team {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *ListTeamsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateTeamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Team          *Team                  `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTeamRequest) Reset() {
	*x = CreateTeamRequest{}
	mi := &file_service_nem_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamRequest) ProtoMessage() {}

func (x *CreateTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamRequest.ProtoReflect.Descriptor instead.
func (*CreateTeamRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTeamRequest) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

type UpdateTeamRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Team  *Team                  `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTeamRequest) Reset() {
	*x = UpdateTeamRequest{}
	mi := &file_service_nem_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamRequest) ProtoMessage() {}

func (x *UpdateTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeamRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateTeamRequest) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *UpdateTeamRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// organization start
type ListOrganizationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of records to return. The service may return fewer than
	// this value.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// https://google.aip.dev/160
	// https://pkg.go.dev/go.einride.tech/aip@v0.67.1
	// https://github.com/einride/aip-go
	Filter        string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy       string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOrganizationsRequest) Reset() {
	*x = ListOrganizationsRequest{}
	mi := &file_service_nem_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOrganizationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsRequest) ProtoMessage() {}

func (x *ListOrganizationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsRequest.ProtoReflect.Descriptor instead.
func (*ListOrganizationsRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{4}
}

func (x *ListOrganizationsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListOrganizationsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListOrganizationsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListOrganizationsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListOrganizationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Organizations []*Organization        `protobuf:"bytes,1,rep,name=organizations,proto3" json:"organizations,omitempty"`
	// A token that can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOrganizationsResponse) Reset() {
	*x = ListOrganizationsResponse{}
	mi := &file_service_nem_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOrganizationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrganizationsResponse) ProtoMessage() {}

func (x *ListOrganizationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrganizationsResponse.ProtoReflect.Descriptor instead.
func (*ListOrganizationsResponse) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{5}
}

func (x *ListOrganizationsResponse) GetOrganizations() []*Organization {
	if x != nil {
		return x.Organizations
	}
	return nil
}

func (x *ListOrganizationsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateOrganizationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Organization  *Organization          `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOrganizationRequest) Reset() {
	*x = CreateOrganizationRequest{}
	mi := &file_service_nem_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrganizationRequest) ProtoMessage() {}

func (x *CreateOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrganizationRequest.ProtoReflect.Descriptor instead.
func (*CreateOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{6}
}

func (x *CreateOrganizationRequest) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type UpdateOrganizationRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	Organization *Organization          `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOrganizationRequest) Reset() {
	*x = UpdateOrganizationRequest{}
	mi := &file_service_nem_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOrganizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrganizationRequest) ProtoMessage() {}

func (x *UpdateOrganizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrganizationRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrganizationRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateOrganizationRequest) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

func (x *UpdateOrganizationRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// project start
type ListProjectsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of records to return. The service may return fewer than
	// this value.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// https://google.aip.dev/160
	// https://pkg.go.dev/go.einride.tech/aip@v0.67.1
	// https://github.com/einride/aip-go
	Filter        string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy       string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProjectsRequest) Reset() {
	*x = ListProjectsRequest{}
	mi := &file_service_nem_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsRequest) ProtoMessage() {}

func (x *ListProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsRequest.ProtoReflect.Descriptor instead.
func (*ListProjectsRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{8}
}

func (x *ListProjectsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListProjectsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListProjectsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListProjectsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListProjectsResponse struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Projects []*Project             `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	// A token that can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProjectsResponse) Reset() {
	*x = ListProjectsResponse{}
	mi := &file_service_nem_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsResponse) ProtoMessage() {}

func (x *ListProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsResponse.ProtoReflect.Descriptor instead.
func (*ListProjectsResponse) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{9}
}

func (x *ListProjectsResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *ListProjectsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateProjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Project       *Project               `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProjectRequest) Reset() {
	*x = CreateProjectRequest{}
	mi := &file_service_nem_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRequest) ProtoMessage() {}

func (x *CreateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{10}
}

func (x *CreateProjectRequest) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type UpdateProjectRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Project *Project               `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProjectRequest) Reset() {
	*x = UpdateProjectRequest{}
	mi := &file_service_nem_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRequest) ProtoMessage() {}

func (x *UpdateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateProjectRequest) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *UpdateProjectRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// extension start
type ListExtensionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of records to return. The service may return fewer than
	// this value.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// https://google.aip.dev/160
	// https://pkg.go.dev/go.einride.tech/aip@v0.67.1
	// https://github.com/einride/aip-go
	Filter        string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy       string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExtensionsRequest) Reset() {
	*x = ListExtensionsRequest{}
	mi := &file_service_nem_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExtensionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExtensionsRequest) ProtoMessage() {}

func (x *ListExtensionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExtensionsRequest.ProtoReflect.Descriptor instead.
func (*ListExtensionsRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{12}
}

func (x *ListExtensionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListExtensionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListExtensionsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListExtensionsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListExtensionsResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Extensions []*Extension           `protobuf:"bytes,1,rep,name=extensions,proto3" json:"extensions,omitempty"`
	// A token that can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExtensionsResponse) Reset() {
	*x = ListExtensionsResponse{}
	mi := &file_service_nem_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExtensionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExtensionsResponse) ProtoMessage() {}

func (x *ListExtensionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExtensionsResponse.ProtoReflect.Descriptor instead.
func (*ListExtensionsResponse) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{13}
}

func (x *ListExtensionsResponse) GetExtensions() []*Extension {
	if x != nil {
		return x.Extensions
	}
	return nil
}

func (x *ListExtensionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateExtensionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Extension     *Extension             `protobuf:"bytes,1,opt,name=extension,proto3" json:"extension,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateExtensionRequest) Reset() {
	*x = CreateExtensionRequest{}
	mi := &file_service_nem_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExtensionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExtensionRequest) ProtoMessage() {}

func (x *CreateExtensionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExtensionRequest.ProtoReflect.Descriptor instead.
func (*CreateExtensionRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{14}
}

func (x *CreateExtensionRequest) GetExtension() *Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

type UpdateExtensionRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Extension *Extension             `protobuf:"bytes,1,opt,name=extension,proto3" json:"extension,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateExtensionRequest) Reset() {
	*x = UpdateExtensionRequest{}
	mi := &file_service_nem_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExtensionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExtensionRequest) ProtoMessage() {}

func (x *UpdateExtensionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExtensionRequest.ProtoReflect.Descriptor instead.
func (*UpdateExtensionRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateExtensionRequest) GetExtension() *Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *UpdateExtensionRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// extension_version start
type ListExtensionVersionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of records to return. The service may return fewer than
	// this value.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// https://google.aip.dev/160
	// https://pkg.go.dev/go.einride.tech/aip@v0.67.1
	// https://github.com/einride/aip-go
	Filter        string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy       string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExtensionVersionsRequest) Reset() {
	*x = ListExtensionVersionsRequest{}
	mi := &file_service_nem_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExtensionVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExtensionVersionsRequest) ProtoMessage() {}

func (x *ListExtensionVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExtensionVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListExtensionVersionsRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{16}
}

func (x *ListExtensionVersionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListExtensionVersionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListExtensionVersionsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListExtensionVersionsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListExtensionVersionsResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ExtensionVersions []*ExtensionVersion    `protobuf:"bytes,1,rep,name=extension_versions,json=extensionVersions,proto3" json:"extension_versions,omitempty"`
	// A token that can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExtensionVersionsResponse) Reset() {
	*x = ListExtensionVersionsResponse{}
	mi := &file_service_nem_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExtensionVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExtensionVersionsResponse) ProtoMessage() {}

func (x *ListExtensionVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExtensionVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListExtensionVersionsResponse) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{17}
}

func (x *ListExtensionVersionsResponse) GetExtensionVersions() []*ExtensionVersion {
	if x != nil {
		return x.ExtensionVersions
	}
	return nil
}

func (x *ListExtensionVersionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateExtensionVersionRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ExtensionVersion *ExtensionVersion      `protobuf:"bytes,1,opt,name=extension_version,json=extensionVersion,proto3" json:"extension_version,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateExtensionVersionRequest) Reset() {
	*x = CreateExtensionVersionRequest{}
	mi := &file_service_nem_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExtensionVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExtensionVersionRequest) ProtoMessage() {}

func (x *CreateExtensionVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExtensionVersionRequest.ProtoReflect.Descriptor instead.
func (*CreateExtensionVersionRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{18}
}

func (x *CreateExtensionVersionRequest) GetExtensionVersion() *ExtensionVersion {
	if x != nil {
		return x.ExtensionVersion
	}
	return nil
}

type UpdateExtensionVersionRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ExtensionVersion *ExtensionVersion      `protobuf:"bytes,1,opt,name=extension_version,json=extensionVersion,proto3" json:"extension_version,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateExtensionVersionRequest) Reset() {
	*x = UpdateExtensionVersionRequest{}
	mi := &file_service_nem_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExtensionVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExtensionVersionRequest) ProtoMessage() {}

func (x *UpdateExtensionVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExtensionVersionRequest.ProtoReflect.Descriptor instead.
func (*UpdateExtensionVersionRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateExtensionVersionRequest) GetExtensionVersion() *ExtensionVersion {
	if x != nil {
		return x.ExtensionVersion
	}
	return nil
}

func (x *UpdateExtensionVersionRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// user start
type ListUsersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of records to return. The service may return fewer than
	// this value.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// https://google.aip.dev/160
	// https://pkg.go.dev/go.einride.tech/aip@v0.67.1
	// https://github.com/einride/aip-go
	Filter        string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy       string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	mi := &file_service_nem_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{20}
}

func (x *ListUsersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUsersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListUsersRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListUsersRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListUsersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Users []*User                `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	// A token that can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	mi := &file_service_nem_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{21}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListUsersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	mi := &file_service_nem_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{22}
}

func (x *CreateUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UpdateUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	User  *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_service_nem_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UpdateUserRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// change_request start
type ListChangeRequestsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of records to return. The service may return fewer than
	// this value.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// https://google.aip.dev/160
	// https://pkg.go.dev/go.einride.tech/aip@v0.67.1
	// https://github.com/einride/aip-go
	Filter        string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy       string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChangeRequestsRequest) Reset() {
	*x = ListChangeRequestsRequest{}
	mi := &file_service_nem_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChangeRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChangeRequestsRequest) ProtoMessage() {}

func (x *ListChangeRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChangeRequestsRequest.ProtoReflect.Descriptor instead.
func (*ListChangeRequestsRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{24}
}

func (x *ListChangeRequestsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListChangeRequestsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListChangeRequestsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListChangeRequestsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListChangeRequestsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ChangeRequests []*ChangeRequest       `protobuf:"bytes,1,rep,name=change_requests,json=changeRequests,proto3" json:"change_requests,omitempty"`
	// A token that can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChangeRequestsResponse) Reset() {
	*x = ListChangeRequestsResponse{}
	mi := &file_service_nem_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChangeRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChangeRequestsResponse) ProtoMessage() {}

func (x *ListChangeRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChangeRequestsResponse.ProtoReflect.Descriptor instead.
func (*ListChangeRequestsResponse) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{25}
}

func (x *ListChangeRequestsResponse) GetChangeRequests() []*ChangeRequest {
	if x != nil {
		return x.ChangeRequests
	}
	return nil
}

func (x *ListChangeRequestsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateChangeRequestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChangeRequest *ChangeRequest         `protobuf:"bytes,1,opt,name=change_request,json=changeRequest,proto3" json:"change_request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateChangeRequestRequest) Reset() {
	*x = CreateChangeRequestRequest{}
	mi := &file_service_nem_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateChangeRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChangeRequestRequest) ProtoMessage() {}

func (x *CreateChangeRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChangeRequestRequest.ProtoReflect.Descriptor instead.
func (*CreateChangeRequestRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{26}
}

func (x *CreateChangeRequestRequest) GetChangeRequest() *ChangeRequest {
	if x != nil {
		return x.ChangeRequest
	}
	return nil
}

type UpdateChangeRequestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChangeRequest *ChangeRequest         `protobuf:"bytes,1,opt,name=change_request,json=changeRequest,proto3" json:"change_request,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateChangeRequestRequest) Reset() {
	*x = UpdateChangeRequestRequest{}
	mi := &file_service_nem_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateChangeRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChangeRequestRequest) ProtoMessage() {}

func (x *UpdateChangeRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChangeRequestRequest.ProtoReflect.Descriptor instead.
func (*UpdateChangeRequestRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateChangeRequestRequest) GetChangeRequest() *ChangeRequest {
	if x != nil {
		return x.ChangeRequest
	}
	return nil
}

func (x *UpdateChangeRequestRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// project_version start
type ListProjectVersionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of records to return. The service may return fewer than
	// this value.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// https://google.aip.dev/160
	// https://pkg.go.dev/go.einride.tech/aip@v0.67.1
	// https://github.com/einride/aip-go
	Filter        string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy       string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProjectVersionsRequest) Reset() {
	*x = ListProjectVersionsRequest{}
	mi := &file_service_nem_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProjectVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectVersionsRequest) ProtoMessage() {}

func (x *ListProjectVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListProjectVersionsRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{28}
}

func (x *ListProjectVersionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListProjectVersionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListProjectVersionsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListProjectVersionsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListProjectVersionsResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProjectVersions []*ProjectVersion      `protobuf:"bytes,1,rep,name=project_versions,json=projectVersions,proto3" json:"project_versions,omitempty"`
	// A token that can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProjectVersionsResponse) Reset() {
	*x = ListProjectVersionsResponse{}
	mi := &file_service_nem_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProjectVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectVersionsResponse) ProtoMessage() {}

func (x *ListProjectVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListProjectVersionsResponse) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{29}
}

func (x *ListProjectVersionsResponse) GetProjectVersions() []*ProjectVersion {
	if x != nil {
		return x.ProjectVersions
	}
	return nil
}

func (x *ListProjectVersionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateProjectVersionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProjectVersion *ProjectVersion        `protobuf:"bytes,1,opt,name=project_version,json=projectVersion,proto3" json:"project_version,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateProjectVersionRequest) Reset() {
	*x = CreateProjectVersionRequest{}
	mi := &file_service_nem_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectVersionRequest) ProtoMessage() {}

func (x *CreateProjectVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectVersionRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectVersionRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{30}
}

func (x *CreateProjectVersionRequest) GetProjectVersion() *ProjectVersion {
	if x != nil {
		return x.ProjectVersion
	}
	return nil
}

type UpdateProjectVersionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProjectVersion *ProjectVersion        `protobuf:"bytes,1,opt,name=project_version,json=projectVersion,proto3" json:"project_version,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProjectVersionRequest) Reset() {
	*x = UpdateProjectVersionRequest{}
	mi := &file_service_nem_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProjectVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectVersionRequest) ProtoMessage() {}

func (x *UpdateProjectVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectVersionRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectVersionRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateProjectVersionRequest) GetProjectVersion() *ProjectVersion {
	if x != nil {
		return x.ProjectVersion
	}
	return nil
}

func (x *UpdateProjectVersionRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// user_team start
type ListUserTeamsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of records to return. The service may return fewer than
	// this value.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// https://google.aip.dev/160
	// https://pkg.go.dev/go.einride.tech/aip@v0.67.1
	// https://github.com/einride/aip-go
	Filter        string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy       string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserTeamsRequest) Reset() {
	*x = ListUserTeamsRequest{}
	mi := &file_service_nem_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserTeamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserTeamsRequest) ProtoMessage() {}

func (x *ListUserTeamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserTeamsRequest.ProtoReflect.Descriptor instead.
func (*ListUserTeamsRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{32}
}

func (x *ListUserTeamsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserTeamsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListUserTeamsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListUserTeamsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListUserTeamsResponse struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	UserTeams []*UserTeam            `protobuf:"bytes,1,rep,name=user_teams,json=userTeams,proto3" json:"user_teams,omitempty"`
	// A token that can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserTeamsResponse) Reset() {
	*x = ListUserTeamsResponse{}
	mi := &file_service_nem_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserTeamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserTeamsResponse) ProtoMessage() {}

func (x *ListUserTeamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserTeamsResponse.ProtoReflect.Descriptor instead.
func (*ListUserTeamsResponse) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{33}
}

func (x *ListUserTeamsResponse) GetUserTeams() []*UserTeam {
	if x != nil {
		return x.UserTeams
	}
	return nil
}

func (x *ListUserTeamsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateUserTeamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserTeam      *UserTeam              `protobuf:"bytes,1,opt,name=user_team,json=userTeam,proto3" json:"user_team,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserTeamRequest) Reset() {
	*x = CreateUserTeamRequest{}
	mi := &file_service_nem_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserTeamRequest) ProtoMessage() {}

func (x *CreateUserTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserTeamRequest.ProtoReflect.Descriptor instead.
func (*CreateUserTeamRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{34}
}

func (x *CreateUserTeamRequest) GetUserTeam() *UserTeam {
	if x != nil {
		return x.UserTeam
	}
	return nil
}

type UpdateUserTeamRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	UserTeam *UserTeam              `protobuf:"bytes,1,opt,name=user_team,json=userTeam,proto3" json:"user_team,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserTeamRequest) Reset() {
	*x = UpdateUserTeamRequest{}
	mi := &file_service_nem_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserTeamRequest) ProtoMessage() {}

func (x *UpdateUserTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserTeamRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserTeamRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateUserTeamRequest) GetUserTeam() *UserTeam {
	if x != nil {
		return x.UserTeam
	}
	return nil
}

func (x *UpdateUserTeamRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// extension_execution start
type ListExtensionExecutionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of records to return. The service may return fewer than
	// this value.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// https://google.aip.dev/160
	// https://pkg.go.dev/go.einride.tech/aip@v0.67.1
	// https://github.com/einride/aip-go
	Filter        string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy       string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExtensionExecutionsRequest) Reset() {
	*x = ListExtensionExecutionsRequest{}
	mi := &file_service_nem_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExtensionExecutionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExtensionExecutionsRequest) ProtoMessage() {}

func (x *ListExtensionExecutionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExtensionExecutionsRequest.ProtoReflect.Descriptor instead.
func (*ListExtensionExecutionsRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{36}
}

func (x *ListExtensionExecutionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListExtensionExecutionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListExtensionExecutionsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListExtensionExecutionsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListExtensionExecutionsResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ExtensionExecutions []*ExtensionExecution  `protobuf:"bytes,1,rep,name=extension_executions,json=extensionExecutions,proto3" json:"extension_executions,omitempty"`
	// A token that can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListExtensionExecutionsResponse) Reset() {
	*x = ListExtensionExecutionsResponse{}
	mi := &file_service_nem_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListExtensionExecutionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExtensionExecutionsResponse) ProtoMessage() {}

func (x *ListExtensionExecutionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExtensionExecutionsResponse.ProtoReflect.Descriptor instead.
func (*ListExtensionExecutionsResponse) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{37}
}

func (x *ListExtensionExecutionsResponse) GetExtensionExecutions() []*ExtensionExecution {
	if x != nil {
		return x.ExtensionExecutions
	}
	return nil
}

func (x *ListExtensionExecutionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateExtensionExecutionRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ExtensionExecution *ExtensionExecution    `protobuf:"bytes,1,opt,name=extension_execution,json=extensionExecution,proto3" json:"extension_execution,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateExtensionExecutionRequest) Reset() {
	*x = CreateExtensionExecutionRequest{}
	mi := &file_service_nem_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExtensionExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExtensionExecutionRequest) ProtoMessage() {}

func (x *CreateExtensionExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExtensionExecutionRequest.ProtoReflect.Descriptor instead.
func (*CreateExtensionExecutionRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{38}
}

func (x *CreateExtensionExecutionRequest) GetExtensionExecution() *ExtensionExecution {
	if x != nil {
		return x.ExtensionExecution
	}
	return nil
}

type UpdateExtensionExecutionRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ExtensionExecution *ExtensionExecution    `protobuf:"bytes,1,opt,name=extension_execution,json=extensionExecution,proto3" json:"extension_execution,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateExtensionExecutionRequest) Reset() {
	*x = UpdateExtensionExecutionRequest{}
	mi := &file_service_nem_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExtensionExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExtensionExecutionRequest) ProtoMessage() {}

func (x *UpdateExtensionExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExtensionExecutionRequest.ProtoReflect.Descriptor instead.
func (*UpdateExtensionExecutionRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateExtensionExecutionRequest) GetExtensionExecution() *ExtensionExecution {
	if x != nil {
		return x.ExtensionExecution
	}
	return nil
}

func (x *UpdateExtensionExecutionRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// user_connection start
type ListUserConnectionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of records to return. The service may return fewer than
	// this value.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// https://google.aip.dev/160
	// https://pkg.go.dev/go.einride.tech/aip@v0.67.1
	// https://github.com/einride/aip-go
	Filter        string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy       string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserConnectionsRequest) Reset() {
	*x = ListUserConnectionsRequest{}
	mi := &file_service_nem_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserConnectionsRequest) ProtoMessage() {}

func (x *ListUserConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserConnectionsRequest.ProtoReflect.Descriptor instead.
func (*ListUserConnectionsRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{40}
}

func (x *ListUserConnectionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserConnectionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListUserConnectionsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListUserConnectionsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListUserConnectionsResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserConnections []*UserConnection      `protobuf:"bytes,1,rep,name=user_connections,json=userConnections,proto3" json:"user_connections,omitempty"`
	// A token that can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserConnectionsResponse) Reset() {
	*x = ListUserConnectionsResponse{}
	mi := &file_service_nem_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserConnectionsResponse) ProtoMessage() {}

func (x *ListUserConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserConnectionsResponse.ProtoReflect.Descriptor instead.
func (*ListUserConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{41}
}

func (x *ListUserConnectionsResponse) GetUserConnections() []*UserConnection {
	if x != nil {
		return x.UserConnections
	}
	return nil
}

func (x *ListUserConnectionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateUserConnectionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserConnection *UserConnection        `protobuf:"bytes,1,opt,name=user_connection,json=userConnection,proto3" json:"user_connection,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateUserConnectionRequest) Reset() {
	*x = CreateUserConnectionRequest{}
	mi := &file_service_nem_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserConnectionRequest) ProtoMessage() {}

func (x *CreateUserConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserConnectionRequest.ProtoReflect.Descriptor instead.
func (*CreateUserConnectionRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{42}
}

func (x *CreateUserConnectionRequest) GetUserConnection() *UserConnection {
	if x != nil {
		return x.UserConnection
	}
	return nil
}

type UpdateUserConnectionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserConnection *UserConnection        `protobuf:"bytes,1,opt,name=user_connection,json=userConnection,proto3" json:"user_connection,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserConnectionRequest) Reset() {
	*x = UpdateUserConnectionRequest{}
	mi := &file_service_nem_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserConnectionRequest) ProtoMessage() {}

func (x *UpdateUserConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserConnectionRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserConnectionRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateUserConnectionRequest) GetUserConnection() *UserConnection {
	if x != nil {
		return x.UserConnection
	}
	return nil
}

func (x *UpdateUserConnectionRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// user_project_version start
type ListUserProjectVersionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of records to return. The service may return fewer than
	// this value.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// https://google.aip.dev/160
	// https://pkg.go.dev/go.einride.tech/aip@v0.67.1
	// https://github.com/einride/aip-go
	Filter        string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy       string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserProjectVersionsRequest) Reset() {
	*x = ListUserProjectVersionsRequest{}
	mi := &file_service_nem_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserProjectVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserProjectVersionsRequest) ProtoMessage() {}

func (x *ListUserProjectVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserProjectVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListUserProjectVersionsRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{44}
}

func (x *ListUserProjectVersionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserProjectVersionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListUserProjectVersionsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListUserProjectVersionsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListUserProjectVersionsResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	UserProjectVersions []*UserProjectVersion  `protobuf:"bytes,1,rep,name=user_project_versions,json=userProjectVersions,proto3" json:"user_project_versions,omitempty"`
	// A token that can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserProjectVersionsResponse) Reset() {
	*x = ListUserProjectVersionsResponse{}
	mi := &file_service_nem_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserProjectVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserProjectVersionsResponse) ProtoMessage() {}

func (x *ListUserProjectVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserProjectVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListUserProjectVersionsResponse) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{45}
}

func (x *ListUserProjectVersionsResponse) GetUserProjectVersions() []*UserProjectVersion {
	if x != nil {
		return x.UserProjectVersions
	}
	return nil
}

func (x *ListUserProjectVersionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateUserProjectVersionRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	UserProjectVersion *UserProjectVersion    `protobuf:"bytes,1,opt,name=user_project_version,json=userProjectVersion,proto3" json:"user_project_version,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateUserProjectVersionRequest) Reset() {
	*x = CreateUserProjectVersionRequest{}
	mi := &file_service_nem_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserProjectVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserProjectVersionRequest) ProtoMessage() {}

func (x *CreateUserProjectVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserProjectVersionRequest.ProtoReflect.Descriptor instead.
func (*CreateUserProjectVersionRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{46}
}

func (x *CreateUserProjectVersionRequest) GetUserProjectVersion() *UserProjectVersion {
	if x != nil {
		return x.UserProjectVersion
	}
	return nil
}

type UpdateUserProjectVersionRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	UserProjectVersion *UserProjectVersion    `protobuf:"bytes,1,opt,name=user_project_version,json=userProjectVersion,proto3" json:"user_project_version,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserProjectVersionRequest) Reset() {
	*x = UpdateUserProjectVersionRequest{}
	mi := &file_service_nem_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserProjectVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserProjectVersionRequest) ProtoMessage() {}

func (x *UpdateUserProjectVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserProjectVersionRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserProjectVersionRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateUserProjectVersionRequest) GetUserProjectVersion() *UserProjectVersion {
	if x != nil {
		return x.UserProjectVersion
	}
	return nil
}

func (x *UpdateUserProjectVersionRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// user_project start
type ListUserProjectsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of records to return. The service may return fewer than
	// this value.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// https://google.aip.dev/160
	// https://pkg.go.dev/go.einride.tech/aip@v0.67.1
	// https://github.com/einride/aip-go
	Filter        string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy       string `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserProjectsRequest) Reset() {
	*x = ListUserProjectsRequest{}
	mi := &file_service_nem_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserProjectsRequest) ProtoMessage() {}

func (x *ListUserProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserProjectsRequest.ProtoReflect.Descriptor instead.
func (*ListUserProjectsRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{48}
}

func (x *ListUserProjectsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUserProjectsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListUserProjectsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListUserProjectsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

type ListUserProjectsResponse struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	UserProjects []*UserProject         `protobuf:"bytes,1,rep,name=user_projects,json=userProjects,proto3" json:"user_projects,omitempty"`
	// A token that can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserProjectsResponse) Reset() {
	*x = ListUserProjectsResponse{}
	mi := &file_service_nem_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserProjectsResponse) ProtoMessage() {}

func (x *ListUserProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserProjectsResponse.ProtoReflect.Descriptor instead.
func (*ListUserProjectsResponse) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{49}
}

func (x *ListUserProjectsResponse) GetUserProjects() []*UserProject {
	if x != nil {
		return x.UserProjects
	}
	return nil
}

func (x *ListUserProjectsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CreateUserProjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserProject   *UserProject           `protobuf:"bytes,1,opt,name=user_project,json=userProject,proto3" json:"user_project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserProjectRequest) Reset() {
	*x = CreateUserProjectRequest{}
	mi := &file_service_nem_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserProjectRequest) ProtoMessage() {}

func (x *CreateUserProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserProjectRequest.ProtoReflect.Descriptor instead.
func (*CreateUserProjectRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{50}
}

func (x *CreateUserProjectRequest) GetUserProject() *UserProject {
	if x != nil {
		return x.UserProject
	}
	return nil
}

type UpdateUserProjectRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	UserProject *UserProject           `protobuf:"bytes,1,opt,name=user_project,json=userProject,proto3" json:"user_project,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserProjectRequest) Reset() {
	*x = UpdateUserProjectRequest{}
	mi := &file_service_nem_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserProjectRequest) ProtoMessage() {}

func (x *UpdateUserProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_nem_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserProjectRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserProjectRequest) Descriptor() ([]byte, []int) {
	return file_service_nem_proto_rawDescGZIP(), []int{51}
}

func (x *UpdateUserProjectRequest) GetUserProject() *UserProject {
	if x != nil {
		return x.UserProject
	}
	return nil
}

func (x *UpdateUserProjectRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

var File_service_nem_proto protoreflect.FileDescriptor

const file_service_nem_proto_rawDesc = "" +
	"\n" +
	"\x11service_nem.proto\x12\x03nem\x1a google/protobuf/field_mask.proto\x1a\n" +
	"team.proto\x1a\x12organization.proto\x1a\rproject.proto\x1a\x0fextension.proto\x1a\x17extension_version.proto\x1a\n" +
	"user.proto\x1a\x14change_request.proto\x1a\x15project_version.proto\x1a\x0fuser_team.proto\x1a\x19extension_execution.proto\x1a\x15user_connection.proto\x1a\x1auser_project_version.proto\x1a\x12user_project.proto\"\x81\x01\n" +
	"\x10ListTeamsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x12\x19\n" +
	"\border_by\x18\x04 \x01(\tR\aorderBy\"\\\n" +
	"\x11ListTeamsResponse\x12\x1f\n" +
	"\x05teams\x18\x01 \x03(\v2\t.nem.TeamR\x05teams\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"2\n" +
	"\x11CreateTeamRequest\x12\x1d\n" +
	"\x04team\x18\x01 \x01(\v2\t.nem.TeamR\x04team\"o\n" +
	"\x11UpdateTeamRequest\x12\x1d\n" +
	"\x04team\x18\x01 \x01(\v2\t.nem.TeamR\x04team\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\x89\x01\n" +
	"\x18ListOrganizationsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x12\x19\n" +
	"\border_by\x18\x04 \x01(\tR\aorderBy\"|\n" +
	"\x19ListOrganizationsResponse\x127\n" +
	"\rorganizations\x18\x01 \x03(\v2\x11.nem.OrganizationR\rorganizations\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"R\n" +
	"\x19CreateOrganizationRequest\x125\n" +
	"\forganization\x18\x01 \x01(\v2\x11.nem.OrganizationR\forganization\"\x8f\x01\n" +
	"\x19UpdateOrganizationRequest\x125\n" +
	"\forganization\x18\x01 \x01(\v2\x11.nem.OrganizationR\forganization\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\x84\x01\n" +
	"\x13ListProjectsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x12\x19\n" +
	"\border_by\x18\x04 \x01(\tR\aorderBy\"h\n" +
	"\x14ListProjectsResponse\x12(\n" +
	"\bprojects\x18\x01 \x03(\v2\f.nem.ProjectR\bprojects\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\">\n" +
	"\x14CreateProjectRequest\x12&\n" +
	"\aproject\x18\x01 \x01(\v2\f.nem.ProjectR\aproject\"{\n" +
	"\x14UpdateProjectRequest\x12&\n" +
	"\aproject\x18\x01 \x01(\v2\f.nem.ProjectR\aproject\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\x86\x01\n" +
	"\x15ListExtensionsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x12\x19\n" +
	"\border_by\x18\x04 \x01(\tR\aorderBy\"p\n" +
	"\x16ListExtensionsResponse\x12.\n" +
	"\n" +
	"extensions\x18\x01 \x03(\v2\x0e.nem.ExtensionR\n" +
	"extensions\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"F\n" +
	"\x16CreateExtensionRequest\x12,\n" +
	"\textension\x18\x01 \x01(\v2\x0e.nem.ExtensionR\textension\"\x83\x01\n" +
	"\x16UpdateExtensionRequest\x12,\n" +
	"\textension\x18\x01 \x01(\v2\x0e.nem.ExtensionR\textension\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\x8d\x01\n" +
	"\x1cListExtensionVersionsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x12\x19\n" +
	"\border_by\x18\x04 \x01(\tR\aorderBy\"\x8d\x01\n" +
	"\x1dListExtensionVersionsResponse\x12D\n" +
	"\x12extension_versions\x18\x01 \x03(\v2\x15.nem.ExtensionVersionR\x11extensionVersions\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"c\n" +
	"\x1dCreateExtensionVersionRequest\x12B\n" +
	"\x11extension_version\x18\x01 \x01(\v2\x15.nem.ExtensionVersionR\x10extensionVersion\"\xa0\x01\n" +
	"\x1dUpdateExtensionVersionRequest\x12B\n" +
	"\x11extension_version\x18\x01 \x01(\v2\x15.nem.ExtensionVersionR\x10extensionVersion\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\x81\x01\n" +
	"\x10ListUsersRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x12\x19\n" +
	"\border_by\x18\x04 \x01(\tR\aorderBy\"\\\n" +
	"\x11ListUsersResponse\x12\x1f\n" +
	"\x05users\x18\x01 \x03(\v2\t.nem.UserR\x05users\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"2\n" +
	"\x11CreateUserRequest\x12\x1d\n" +
	"\x04user\x18\x01 \x01(\v2\t.nem.UserR\x04user\"o\n" +
	"\x11UpdateUserRequest\x12\x1d\n" +
	"\x04user\x18\x01 \x01(\v2\t.nem.UserR\x04user\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\x8a\x01\n" +
	"\x19ListChangeRequestsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x12\x19\n" +
	"\border_by\x18\x04 \x01(\tR\aorderBy\"\x81\x01\n" +
	"\x1aListChangeRequestsResponse\x12;\n" +
	"\x0fchange_requests\x18\x01 \x03(\v2\x12.nem.ChangeRequestR\x0echangeRequests\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"W\n" +
	"\x1aCreateChangeRequestRequest\x129\n" +
	"\x0echange_request\x18\x01 \x01(\v2\x12.nem.ChangeRequestR\rchangeRequest\"\x94\x01\n" +
	"\x1aUpdateChangeRequestRequest\x129\n" +
	"\x0echange_request\x18\x01 \x01(\v2\x12.nem.ChangeRequestR\rchangeRequest\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\x8b\x01\n" +
	"\x1aListProjectVersionsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x12\x19\n" +
	"\border_by\x18\x04 \x01(\tR\aorderBy\"\x85\x01\n" +
	"\x1bListProjectVersionsResponse\x12>\n" +
	"\x10project_versions\x18\x01 \x03(\v2\x13.nem.ProjectVersionR\x0fprojectVersions\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"[\n" +
	"\x1bCreateProjectVersionRequest\x12<\n" +
	"\x0fproject_version\x18\x01 \x01(\v2\x13.nem.ProjectVersionR\x0eprojectVersion\"\x98\x01\n" +
	"\x1bUpdateProjectVersionRequest\x12<\n" +
	"\x0fproject_version\x18\x01 \x01(\v2\x13.nem.ProjectVersionR\x0eprojectVersion\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\x85\x01\n" +
	"\x14ListUserTeamsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x12\x19\n" +
	"\border_by\x18\x04 \x01(\tR\aorderBy\"m\n" +
	"\x15ListUserTeamsResponse\x12,\n" +
	"\n" +
	"user_teams\x18\x01 \x03(\v2\r.nem.UserTeamR\tuserTeams\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"C\n" +
	"\x15CreateUserTeamRequest\x12*\n" +
	"\tuser_team\x18\x01 \x01(\v2\r.nem.UserTeamR\buserTeam\"\x80\x01\n" +
	"\x15UpdateUserTeamRequest\x12*\n" +
	"\tuser_team\x18\x01 \x01(\v2\r.nem.UserTeamR\buserTeam\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\x8f\x01\n" +
	"\x1eListExtensionExecutionsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x12\x19\n" +
	"\border_by\x18\x04 \x01(\tR\aorderBy\"\x95\x01\n" +
	"\x1fListExtensionExecutionsResponse\x12J\n" +
	"\x14extension_executions\x18\x01 \x03(\v2\x17.nem.ExtensionExecutionR\x13extensionExecutions\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"k\n" +
	"\x1fCreateExtensionExecutionRequest\x12H\n" +
	"\x13extension_execution\x18\x01 \x01(\v2\x17.nem.ExtensionExecutionR\x12extensionExecution\"\xa8\x01\n" +
	"\x1fUpdateExtensionExecutionRequest\x12H\n" +
	"\x13extension_execution\x18\x01 \x01(\v2\x17.nem.ExtensionExecutionR\x12extensionExecution\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\x8b\x01\n" +
	"\x1aListUserConnectionsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x12\x19\n" +
	"\border_by\x18\x04 \x01(\tR\aorderBy\"\x85\x01\n" +
	"\x1bListUserConnectionsResponse\x12>\n" +
	"\x10user_connections\x18\x01 \x03(\v2\x13.nem.UserConnectionR\x0fuserConnections\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"[\n" +
	"\x1bCreateUserConnectionRequest\x12<\n" +
	"\x0fuser_connection\x18\x01 \x01(\v2\x13.nem.UserConnectionR\x0euserConnection\"\x98\x01\n" +
	"\x1bUpdateUserConnectionRequest\x12<\n" +
	"\x0fuser_connection\x18\x01 \x01(\v2\x13.nem.UserConnectionR\x0euserConnection\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\x8f\x01\n" +
	"\x1eListUserProjectVersionsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x12\x19\n" +
	"\border_by\x18\x04 \x01(\tR\aorderBy\"\x96\x01\n" +
	"\x1fListUserProjectVersionsResponse\x12K\n" +
	"\x15user_project_versions\x18\x01 \x03(\v2\x17.nem.UserProjectVersionR\x13userProjectVersions\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"l\n" +
	"\x1fCreateUserProjectVersionRequest\x12I\n" +
	"\x14user_project_version\x18\x01 \x01(\v2\x17.nem.UserProjectVersionR\x12userProjectVersion\"\xa9\x01\n" +
	"\x1fUpdateUserProjectVersionRequest\x12I\n" +
	"\x14user_project_version\x18\x01 \x01(\v2\x17.nem.UserProjectVersionR\x12userProjectVersion\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask\"\x88\x01\n" +
	"\x17ListUserProjectsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x16\n" +
	"\x06filter\x18\x03 \x01(\tR\x06filter\x12\x19\n" +
	"\border_by\x18\x04 \x01(\tR\aorderBy\"y\n" +
	"\x18ListUserProjectsResponse\x125\n" +
	"\ruser_projects\x18\x01 \x03(\v2\x10.nem.UserProjectR\fuserProjects\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"O\n" +
	"\x18CreateUserProjectRequest\x123\n" +
	"\fuser_project\x18\x01 \x01(\v2\x10.nem.UserProjectR\vuserProject\"\x8c\x01\n" +
	"\x18UpdateUserProjectRequest\x123\n" +
	"\fuser_project\x18\x01 \x01(\v2\x10.nem.UserProjectR\vuserProject\x12;\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskR\n" +
	"updateMask2\xb9\x17\n" +
	"\x03Nem\x12<\n" +
	"\tListTeams\x12\x15.nem.ListTeamsRequest\x1a\x16.nem.ListTeamsResponse\"\x00\x121\n" +
	"\n" +
	"CreateTeam\x12\x16.nem.CreateTeamRequest\x1a\t.nem.Team\"\x00\x121\n" +
	"\n" +
	"UpdateTeam\x12\x16.nem.UpdateTeamRequest\x1a\t.nem.Team\"\x00\x12T\n" +
	"\x11ListOrganizations\x12\x1d.nem.ListOrganizationsRequest\x1a\x1e.nem.ListOrganizationsResponse\"\x00\x12I\n" +
	"\x12CreateOrganization\x12\x1e.nem.CreateOrganizationRequest\x1a\x11.nem.Organization\"\x00\x12I\n" +
	"\x12UpdateOrganization\x12\x1e.nem.UpdateOrganizationRequest\x1a\x11.nem.Organization\"\x00\x12E\n" +
	"\fListProjects\x12\x18.nem.ListProjectsRequest\x1a\x19.nem.ListProjectsResponse\"\x00\x12:\n" +
	"\rCreateProject\x12\x19.nem.CreateProjectRequest\x1a\f.nem.Project\"\x00\x12:\n" +
	"\rUpdateProject\x12\x19.nem.UpdateProjectRequest\x1a\f.nem.Project\"\x00\x12K\n" +
	"\x0eListExtensions\x12\x1a.nem.ListExtensionsRequest\x1a\x1b.nem.ListExtensionsResponse\"\x00\x12@\n" +
	"\x0fCreateExtension\x12\x1b.nem.CreateExtensionRequest\x1a\x0e.nem.Extension\"\x00\x12@\n" +
	"\x0fUpdateExtension\x12\x1b.nem.UpdateExtensionRequest\x1a\x0e.nem.Extension\"\x00\x12`\n" +
	"\x15ListExtensionVersions\x12!.nem.ListExtensionVersionsRequest\x1a\".nem.ListExtensionVersionsResponse\"\x00\x12U\n" +
	"\x16CreateExtensionVersion\x12\".nem.CreateExtensionVersionRequest\x1a\x15.nem.ExtensionVersion\"\x00\x12U\n" +
	"\x16UpdateExtensionVersion\x12\".nem.UpdateExtensionVersionRequest\x1a\x15.nem.ExtensionVersion\"\x00\x12<\n" +
	"\tListUsers\x12\x15.nem.ListUsersRequest\x1a\x16.nem.ListUsersResponse\"\x00\x121\n" +
	"\n" +
	"CreateUser\x12\x16.nem.CreateUserRequest\x1a\t.nem.User\"\x00\x121\n" +
	"\n" +
	"UpdateUser\x12\x16.nem.UpdateUserRequest\x1a\t.nem.User\"\x00\x12W\n" +
	"\x12ListChangeRequests\x12\x1e.nem.ListChangeRequestsRequest\x1a\x1f.nem.ListChangeRequestsResponse\"\x00\x12L\n" +
	"\x13CreateChangeRequest\x12\x1f.nem.CreateChangeRequestRequest\x1a\x12.nem.ChangeRequest\"\x00\x12L\n" +
	"\x13UpdateChangeRequest\x12\x1f.nem.UpdateChangeRequestRequest\x1a\x12.nem.ChangeRequest\"\x00\x12Z\n" +
	"\x13ListProjectVersions\x12\x1f.nem.ListProjectVersionsRequest\x1a .nem.ListProjectVersionsResponse\"\x00\x12O\n" +
	"\x14CreateProjectVersion\x12 .nem.CreateProjectVersionRequest\x1a\x13.nem.ProjectVersion\"\x00\x12O\n" +
	"\x14UpdateProjectVersion\x12 .nem.UpdateProjectVersionRequest\x1a\x13.nem.ProjectVersion\"\x00\x12H\n" +
	"\rListUserTeams\x12\x19.nem.ListUserTeamsRequest\x1a\x1a.nem.ListUserTeamsResponse\"\x00\x12=\n" +
	"\x0eCreateUserTeam\x12\x1a.nem.CreateUserTeamRequest\x1a\r.nem.UserTeam\"\x00\x12=\n" +
	"\x0eUpdateUserTeam\x12\x1a.nem.UpdateUserTeamRequest\x1a\r.nem.UserTeam\"\x00\x12f\n" +
	"\x17ListExtensionExecutions\x12#.nem.ListExtensionExecutionsRequest\x1a$.nem.ListExtensionExecutionsResponse\"\x00\x12[\n" +
	"\x18CreateExtensionExecution\x12$.nem.CreateExtensionExecutionRequest\x1a\x17.nem.ExtensionExecution\"\x00\x12[\n" +
	"\x18UpdateExtensionExecution\x12$.nem.UpdateExtensionExecutionRequest\x1a\x17.nem.ExtensionExecution\"\x00\x12Z\n" +
	"\x13ListUserConnections\x12\x1f.nem.ListUserConnectionsRequest\x1a .nem.ListUserConnectionsResponse\"\x00\x12O\n" +
	"\x14CreateUserConnection\x12 .nem.CreateUserConnectionRequest\x1a\x13.nem.UserConnection\"\x00\x12O\n" +
	"\x14UpdateUserConnection\x12 .nem.UpdateUserConnectionRequest\x1a\x13.nem.UserConnection\"\x00\x12f\n" +
	"\x17ListUserProjectVersions\x12#.nem.ListUserProjectVersionsRequest\x1a$.nem.ListUserProjectVersionsResponse\"\x00\x12[\n" +
	"\x18CreateUserProjectVersion\x12$.nem.CreateUserProjectVersionRequest\x1a\x17.nem.UserProjectVersion\"\x00\x12[\n" +
	"\x18UpdateUserProjectVersion\x12$.nem.UpdateUserProjectVersionRequest\x1a\x17.nem.UserProjectVersion\"\x00\x12Q\n" +
	"\x10ListUserProjects\x12\x1c.nem.ListUserProjectsRequest\x1a\x1d.nem.ListUserProjectsResponse\"\x00\x12F\n" +
	"\x11CreateUserProject\x12\x1d.nem.CreateUserProjectRequest\x1a\x10.nem.UserProject\"\x00\x12F\n" +
	"\x11UpdateUserProject\x12\x1d.nem.UpdateUserProjectRequest\x1a\x10.nem.UserProject\"\x00B*\n" +
	"\x14github.com/nuzur/nemB\x03NemP\x01Z\vnem/idl/genb\x06proto3"

var (
	file_service_nem_proto_rawDescOnce sync.Once
	file_service_nem_proto_rawDescData []byte
)

func file_service_nem_proto_rawDescGZIP() []byte {
	file_service_nem_proto_rawDescOnce.Do(func() {
		file_service_nem_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_nem_proto_rawDesc), len(file_service_nem_proto_rawDesc)))
	})
	return file_service_nem_proto_rawDescData
}

var file_service_nem_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_service_nem_proto_goTypes = []any{
	(*ListTeamsRequest)(nil),                // 0: nem.ListTeamsRequest
	(*ListTeamsResponse)(nil),               // 1: nem.ListTeamsResponse
	(*CreateTeamRequest)(nil),               // 2: nem.CreateTeamRequest
	(*UpdateTeamRequest)(nil),               // 3: nem.UpdateTeamRequest
	(*ListOrganizationsRequest)(nil),        // 4: nem.ListOrganizationsRequest
	(*ListOrganizationsResponse)(nil),       // 5: nem.ListOrganizationsResponse
	(*CreateOrganizationRequest)(nil),       // 6: nem.CreateOrganizationRequest
	(*UpdateOrganizationRequest)(nil),       // 7: nem.UpdateOrganizationRequest
	(*ListProjectsRequest)(nil),             // 8: nem.ListProjectsRequest
	(*ListProjectsResponse)(nil),            // 9: nem.ListProjectsResponse
	(*CreateProjectRequest)(nil),            // 10: nem.CreateProjectRequest
	(*UpdateProjectRequest)(nil),            // 11: nem.UpdateProjectRequest
	(*ListExtensionsRequest)(nil),           // 12: nem.ListExtensionsRequest
	(*ListExtensionsResponse)(nil),          // 13: nem.ListExtensionsResponse
	(*CreateExtensionRequest)(nil),          // 14: nem.CreateExtensionRequest
	(*UpdateExtensionRequest)(nil),          // 15: nem.UpdateExtensionRequest
	(*ListExtensionVersionsRequest)(nil),    // 16: nem.ListExtensionVersionsRequest
	(*ListExtensionVersionsResponse)(nil),   // 17: nem.ListExtensionVersionsResponse
	(*CreateExtensionVersionRequest)(nil),   // 18: nem.CreateExtensionVersionRequest
	(*UpdateExtensionVersionRequest)(nil),   // 19: nem.UpdateExtensionVersionRequest
	(*ListUsersRequest)(nil),                // 20: nem.ListUsersRequest
	(*ListUsersResponse)(nil),               // 21: nem.ListUsersResponse
	(*CreateUserRequest)(nil),               // 22: nem.CreateUserRequest
	(*UpdateUserRequest)(nil),               // 23: nem.UpdateUserRequest
	(*ListChangeRequestsRequest)(nil),       // 24: nem.ListChangeRequestsRequest
	(*ListChangeRequestsResponse)(nil),      // 25: nem.ListChangeRequestsResponse
	(*CreateChangeRequestRequest)(nil),      // 26: nem.CreateChangeRequestRequest
	(*UpdateChangeRequestRequest)(nil),      // 27: nem.UpdateChangeRequestRequest
	(*ListProjectVersionsRequest)(nil),      // 28: nem.ListProjectVersionsRequest
	(*ListProjectVersionsResponse)(nil),     // 29: nem.ListProjectVersionsResponse
	(*CreateProjectVersionRequest)(nil),     // 30: nem.CreateProjectVersionRequest
	(*UpdateProjectVersionRequest)(nil),     // 31: nem.UpdateProjectVersionRequest
	(*ListUserTeamsRequest)(nil),            // 32: nem.ListUserTeamsRequest
	(*ListUserTeamsResponse)(nil),           // 33: nem.ListUserTeamsResponse
	(*CreateUserTeamRequest)(nil),           // 34: nem.CreateUserTeamRequest
	(*UpdateUserTeamRequest)(nil),           // 35: nem.UpdateUserTeamRequest
	(*ListExtensionExecutionsRequest)(nil),  // 36: nem.ListExtensionExecutionsRequest
	(*ListExtensionExecutionsResponse)(nil), // 37: nem.ListExtensionExecutionsResponse
	(*CreateExtensionExecutionRequest)(nil), // 38: nem.CreateExtensionExecutionRequest
	(*UpdateExtensionExecutionRequest)(nil), // 39: nem.UpdateExtensionExecutionRequest
	(*ListUserConnectionsRequest)(nil),      // 40: nem.ListUserConnectionsRequest
	(*ListUserConnectionsResponse)(nil),     // 41: nem.ListUserConnectionsResponse
	(*CreateUserConnectionRequest)(nil),     // 42: nem.CreateUserConnectionRequest
	(*UpdateUserConnectionRequest)(nil),     // 43: nem.UpdateUserConnectionRequest
	(*ListUserProjectVersionsRequest)(nil),  // 44: nem.ListUserProjectVersionsRequest
	(*ListUserProjectVersionsResponse)(nil), // 45: nem.ListUserProjectVersionsResponse
	(*CreateUserProjectVersionRequest)(nil), // 46: nem.CreateUserProjectVersionRequest
	(*UpdateUserProjectVersionRequest)(nil), // 47: nem.UpdateUserProjectVersionRequest
	(*ListUserProjectsRequest)(nil),         // 48: nem.ListUserProjectsRequest
	(*ListUserProjectsResponse)(nil),        // 49: nem.ListUserProjectsResponse
	(*CreateUserProjectRequest)(nil),        // 50: nem.CreateUserProjectRequest
	(*UpdateUserProjectRequest)(nil),        // 51: nem.UpdateUserProjectRequest
	(*Team)(nil),                            // 52: nem.Team
	(*fieldmaskpb.FieldMask)(nil),           // 53: google.protobuf.FieldMask
	(*Organization)(nil),                    // 54: nem.Organization
	(*Project)(nil),                         // 55: nem.Project
	(*Extension)(nil),                       // 56: nem.Extension
	(*ExtensionVersion)(nil),                // 57: nem.ExtensionVersion
	(*User)(nil),                            // 58: nem.User
	(*ChangeRequest)(nil),                   // 59: nem.ChangeRequest
	(*ProjectVersion)(nil),                  // 60: nem.ProjectVersion
	(*UserTeam)(nil),                        // 61: nem.UserTeam
	(*ExtensionExecution)(nil),              // 62: nem.ExtensionExecution
	(*UserConnection)(nil),                  // 63: nem.UserConnection
	(*UserProjectVersion)(nil),              // 64: nem.UserProjectVersion
	(*UserProject)(nil),                     // 65: nem.UserProject
}
var file_service_nem_proto_depIdxs = []int32{
	52, // 0: nem.ListTeamsResponse.teams:type_name -> nem.Team
	52, // 1: nem.CreateTeamRequest.team:type_name -> nem.Team
	52, // 2: nem.UpdateTeamRequest.team:type_name -> nem.Team
	53, // 3: nem.UpdateTeamRequest.update_mask:type_name -> google.protobuf.FieldMask
	54, // 4: nem.ListOrganizationsResponse.organizations:type_name -> nem.Organization
	54, // 5: nem.CreateOrganizationRequest.organization:type_name -> nem.Organization
	54, // 6: nem.UpdateOrganizationRequest.organization:type_name -> nem.Organization
	53, // 7: nem.UpdateOrganizationRequest.update_mask:type_name -> google.protobuf.FieldMask
	55, // 8: nem.ListProjectsResponse.projects:type_name -> nem.Project
	55, // 9: nem.CreateProjectRequest.project:type_name -> nem.Project
	55, // 10: nem.UpdateProjectRequest.project:type_name -> nem.Project
	53, // 11: nem.UpdateProjectRequest.update_mask:type_name -> google.protobuf.FieldMask
	56, // 12: nem.ListExtensionsResponse.extensions:type_name -> nem.Extension
	56, // 13: nem.CreateExtensionRequest.extension:type_name -> nem.Extension
	56, // 14: nem.UpdateExtensionRequest.extension:type_name -> nem.Extension
	53, // 15: nem.UpdateExtensionRequest.update_mask:type_name -> google.protobuf.FieldMask
	57, // 16: nem.ListExtensionVersionsResponse.extension_versions:type_name -> nem.ExtensionVersion
	57, // 17: nem.CreateExtensionVersionRequest.extension_version:type_name -> nem.ExtensionVersion
	57, // 18: nem.UpdateExtensionVersionRequest.extension_version:type_name -> nem.ExtensionVersion
	53, // 19: nem.UpdateExtensionVersionRequest.update_mask:type_name -> google.protobuf.FieldMask
	58, // 20: nem.ListUsersResponse.users:type_name -> nem.User
	58, // 21: nem.CreateUserRequest.user:type_name -> nem.User
	58, // 22: nem.UpdateUserRequest.user:type_name -> nem.User
	53, // 23: nem.UpdateUserRequest.update_mask:type_name -> google.protobuf.FieldMask
	59, // 24: nem.ListChangeRequestsResponse.change_requests:type_name -> nem.ChangeRequest
	59, // 25: nem.CreateChangeRequestRequest.change_request:type_name -> nem.ChangeRequest
	59, // 26: nem.UpdateChangeRequestRequest.change_request:type_name -> nem.ChangeRequest
	53, // 27: nem.UpdateChangeRequestRequest.update_mask:type_name -> google.protobuf.FieldMask
	60, // 28: nem.ListProjectVersionsResponse.project_versions:type_name -> nem.ProjectVersion
	60, // 29: nem.CreateProjectVersionRequest.project_version:type_name -> nem.ProjectVersion
	60, // 30: nem.UpdateProjectVersionRequest.project_version:type_name -> nem.ProjectVersion
	53, // 31: nem.UpdateProjectVersionRequest.update_mask:type_name -> google.protobuf.FieldMask
	61, // 32: nem.ListUserTeamsResponse.user_teams:type_name -> nem.UserTeam
	61, // 33: nem.CreateUserTeamRequest.user_team:type_name -> nem.UserTeam
	61, // 34: nem.UpdateUserTeamRequest.user_team:type_name -> nem.UserTeam
	53, // 35: nem.UpdateUserTeamRequest.update_mask:type_name -> google.protobuf.FieldMask
	62, // 36: nem.ListExtensionExecutionsResponse.extension_executions:type_name -> nem.ExtensionExecution
	62, // 37: nem.CreateExtensionExecutionRequest.extension_execution:type_name -> nem.ExtensionExecution
	62, // 38: nem.UpdateExtensionExecutionRequest.extension_execution:type_name -> nem.ExtensionExecution
	53, // 39: nem.UpdateExtensionExecutionRequest.update_mask:type_name -> google.protobuf.FieldMask
	63, // 40: nem.ListUserConnectionsResponse.user_connections:type_name -> nem.UserConnection
	63, // 41: nem.CreateUserConnectionRequest.user_connection:type_name -> nem.UserConnection
	63, // 42: nem.UpdateUserConnectionRequest.user_connection:type_name -> nem.UserConnection
	53, // 43: nem.UpdateUserConnectionRequest.update_mask:type_name -> google.protobuf.FieldMask
	64, // 44: nem.ListUserProjectVersionsResponse.user_project_versions:type_name -> nem.UserProjectVersion
	64, // 45: nem.CreateUserProjectVersionRequest.user_project_version:type_name -> nem.UserProjectVersion
	64, // 46: nem.UpdateUserProjectVersionRequest.user_project_version:type_name -> nem.UserProjectVersion
	53, // 47: nem.UpdateUserProjectVersionRequest.update_mask:type_name -> google.protobuf.FieldMask
	65, // 48: nem.ListUserProjectsResponse.user_projects:type_name -> nem.UserProject
	65, // 49: nem.CreateUserProjectRequest.user_project:type_name -> nem.UserProject
	65, // 50: nem.UpdateUserProjectRequest.user_project:type_name -> nem.UserProject
	53, // 51: nem.UpdateUserProjectRequest.update_mask:type_name -> google.protobuf.FieldMask
	0,  // 52: nem.Nem.ListTeams:input_type -> nem.ListTeamsRequest
	2,  // 53: nem.Nem.CreateTeam:input_type -> nem.CreateTeamRequest
	3,  // 54: nem.Nem.UpdateTeam:input_type -> nem.UpdateTeamRequest
	4,  // 55: nem.Nem.ListOrganizations:input_type -> nem.ListOrganizationsRequest
	6,  // 56: nem.Nem.CreateOrganization:input_type -> nem.CreateOrganizationRequest
	7,  // 57: nem.Nem.UpdateOrganization:input_type -> nem.UpdateOrganizationRequest
	8,  // 58: nem.Nem.ListProjects:input_type -> nem.ListProjectsRequest
	10, // 59: nem.Nem.CreateProject:input_type -> nem.CreateProjectRequest
	11, // 60: nem.Nem.UpdateProject:input_type -> nem.UpdateProjectRequest
	12, // 61: nem.Nem.ListExtensions:input_type -> nem.ListExtensionsRequest
	14, // 62: nem.Nem.CreateExtension:input_type -> nem.CreateExtensionRequest
	15, // 63: nem.Nem.UpdateExtension:input_type -> nem.UpdateExtensionRequest
	16, // 64: nem.Nem.ListExtensionVersions:input_type -> nem.ListExtensionVersionsRequest
	18, // 65: nem.Nem.CreateExtensionVersion:input_type -> nem.CreateExtensionVersionRequest
	19, // 66: nem.Nem.UpdateExtensionVersion:input_type -> nem.UpdateExtensionVersionRequest
	20, // 67: nem.Nem.ListUsers:input_type -> nem.ListUsersRequest
	22, // 68: nem.Nem.CreateUser:input_type -> nem.CreateUserRequest
	23, // 69: nem.Nem.UpdateUser:input_type -> nem.UpdateUserRequest
	24, // 70: nem.Nem.ListChangeRequests:input_type -> nem.ListChangeRequestsRequest
	26, // 71: nem.Nem.CreateChangeRequest:input_type -> nem.CreateChangeRequestRequest
	27, // 72: nem.Nem.UpdateChangeRequest:input_type -> nem.UpdateChangeRequestRequest
	28, // 73: nem.Nem.ListProjectVersions:input_type -> nem.ListProjectVersionsRequest
	30, // 74: nem.Nem.CreateProjectVersion:input_type -> nem.CreateProjectVersionRequest
	31, // 75: nem.Nem.UpdateProjectVersion:input_type -> nem.UpdateProjectVersionRequest
	32, // 76: nem.Nem.ListUserTeams:input_type -> nem.ListUserTeamsRequest
	34, // 77: nem.Nem.CreateUserTeam:input_type -> nem.CreateUserTeamRequest
	35, // 78: nem.Nem.UpdateUserTeam:input_type -> nem.UpdateUserTeamRequest
	36, // 79: nem.Nem.ListExtensionExecutions:input_type -> nem.ListExtensionExecutionsRequest
	38, // 80: nem.Nem.CreateExtensionExecution:input_type -> nem.CreateExtensionExecutionRequest
	39, // 81: nem.Nem.UpdateExtensionExecution:input_type -> nem.UpdateExtensionExecutionRequest
	40, // 82: nem.Nem.ListUserConnections:input_type -> nem.ListUserConnectionsRequest
	42, // 83: nem.Nem.CreateUserConnection:input_type -> nem.CreateUserConnectionRequest
	43, // 84: nem.Nem.UpdateUserConnection:input_type -> nem.UpdateUserConnectionRequest
	44, // 85: nem.Nem.ListUserProjectVersions:input_type -> nem.ListUserProjectVersionsRequest
	46, // 86: nem.Nem.CreateUserProjectVersion:input_type -> nem.CreateUserProjectVersionRequest
	47, // 87: nem.Nem.UpdateUserProjectVersion:input_type -> nem.UpdateUserProjectVersionRequest
	48, // 88: nem.Nem.ListUserProjects:input_type -> nem.ListUserProjectsRequest
	50, // 89: nem.Nem.CreateUserProject:input_type -> nem.CreateUserProjectRequest
	51, // 90: nem.Nem.UpdateUserProject:input_type -> nem.UpdateUserProjectRequest
	1,  // 91: nem.Nem.ListTeams:output_type -> nem.ListTeamsResponse
	52, // 92: nem.Nem.CreateTeam:output_type -> nem.Team
	52, // 93: nem.Nem.UpdateTeam:output_type -> nem.Team
	5,  // 94: nem.Nem.ListOrganizations:output_type -> nem.ListOrganizationsResponse
	54, // 95: nem.Nem.CreateOrganization:output_type -> nem.Organization
	54, // 96: nem.Nem.UpdateOrganization:output_type -> nem.Organization
	9,  // 97: nem.Nem.ListProjects:output_type -> nem.ListProjectsResponse
	55, // 98: nem.Nem.CreateProject:output_type -> nem.Project
	55, // 99: nem.Nem.UpdateProject:output_type -> nem.Project
	13, // 100: nem.Nem.ListExtensions:output_type -> nem.ListExtensionsResponse
	56, // 101: nem.Nem.CreateExtension:output_type -> nem.Extension
	56, // 102: nem.Nem.UpdateExtension:output_type -> nem.Extension
	17, // 103: nem.Nem.ListExtensionVersions:output_type -> nem.ListExtensionVersionsResponse
	57, // 104: nem.Nem.CreateExtensionVersion:output_type -> nem.ExtensionVersion
	57, // 105: nem.Nem.UpdateExtensionVersion:output_type -> nem.ExtensionVersion
	21, // 106: nem.Nem.ListUsers:output_type -> nem.ListUsersResponse
	58, // 107: nem.Nem.CreateUser:output_type -> nem.User
	58, // 108: nem.Nem.UpdateUser:output_type -> nem.User
	25, // 109: nem.Nem.ListChangeRequests:output_type -> nem.ListChangeRequestsResponse
	59, // 110: nem.Nem.CreateChangeRequest:output_type -> nem.ChangeRequest
	59, // 111: nem.Nem.UpdateChangeRequest:output_type -> nem.ChangeRequest
	29, // 112: nem.Nem.ListProjectVersions:output_type -> nem.ListProjectVersionsResponse
	60, // 113: nem.Nem.CreateProjectVersion:output_type -> nem.ProjectVersion
	60, // 114: nem.Nem.UpdateProjectVersion:output_type -> nem.ProjectVersion
	33, // 115: nem.Nem.ListUserTeams:output_type -> nem.ListUserTeamsResponse
	61, // 116: nem.Nem.CreateUserTeam:output_type -> nem.UserTeam
	61, // 117: nem.Nem.UpdateUserTeam:output_type -> nem.UserTeam
	37, // 118: nem.Nem.ListExtensionExecutions:output_type -> nem.ListExtensionExecutionsResponse
	62, // 119: nem.Nem.CreateExtensionExecution:output_type -> nem.ExtensionExecution
	62, // 120: nem.Nem.UpdateExtensionExecution:output_type -> nem.ExtensionExecution
	41, // 121: nem.Nem.ListUserConnections:output_type -> nem.ListUserConnectionsResponse
	63, // 122: nem.Nem.CreateUserConnection:output_type -> nem.UserConnection
	63, // 123: nem.Nem.UpdateUserConnection:output_type -> nem.UserConnection
	45, // 124: nem.Nem.ListUserProjectVersions:output_type -> nem.ListUserProjectVersionsResponse
	64, // 125: nem.Nem.CreateUserProjectVersion:output_type -> nem.UserProjectVersion
	64, // 126: nem.Nem.UpdateUserProjectVersion:output_type -> nem.UserProjectVersion
	49, // 127: nem.Nem.ListUserProjects:output_type -> nem.ListUserProjectsResponse
	65, // 128: nem.Nem.CreateUserProject:output_type -> nem.UserProject
	65, // 129: nem.Nem.UpdateUserProject:output_type -> nem.UserProject
	91, // [91:130] is the sub-list for method output_type
	52, // [52:91] is the sub-list for method input_type
	52, // [52:52] is the sub-list for extension type_name
	52, // [52:52] is the sub-list for extension extendee
	0,  // [0:52] is the sub-list for field type_name
}

func init() { file_service_nem_proto_init() }
func file_service_nem_proto_init() {
	if File_service_nem_proto != nil {
		return
	}
	file_team_proto_init()
	file_organization_proto_init()
	file_project_proto_init()
	file_extension_proto_init()
	file_extension_version_proto_init()
	file_user_proto_init()
	file_change_request_proto_init()
	file_project_version_proto_init()
	file_user_team_proto_init()
	file_extension_execution_proto_init()
	file_user_connection_proto_init()
	file_user_project_version_proto_init()
	file_user_project_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_nem_proto_rawDesc), len(file_service_nem_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_nem_proto_goTypes,
		DependencyIndexes: file_service_nem_proto_depIdxs,
		MessageInfos:      file_service_nem_proto_msgTypes,
	}.Build()
	File_service_nem_proto = out.File
	file_service_nem_proto_goTypes = nil
	file_service_nem_proto_depIdxs = nil
}

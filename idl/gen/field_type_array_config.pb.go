// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: field_type_array_config.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FieldTypeArrayConfigType int32

const (
	FieldTypeArrayConfigType_FIELD_TYPE_ARRAY_CONFIG_TYPE_INVALID   FieldTypeArrayConfigType = 0
	FieldTypeArrayConfigType_FIELD_TYPE_ARRAY_CONFIG_TYPE_UUID      FieldTypeArrayConfigType = 1
	FieldTypeArrayConfigType_FIELD_TYPE_ARRAY_CONFIG_TYPE_INTEGER   FieldTypeArrayConfigType = 2
	FieldTypeArrayConfigType_FIELD_TYPE_ARRAY_CONFIG_TYPE_FLOAT     FieldTypeArrayConfigType = 3
	FieldTypeArrayConfigType_FIELD_TYPE_ARRAY_CONFIG_TYPE_DECIMAL   FieldTypeArrayConfigType = 4
	FieldTypeArrayConfigType_FIELD_TYPE_ARRAY_CONFIG_TYPE_CHAR      FieldTypeArrayConfigType = 5
	FieldTypeArrayConfigType_FIELD_TYPE_ARRAY_CONFIG_TYPE_VARCHAR   FieldTypeArrayConfigType = 6
	FieldTypeArrayConfigType_FIELD_TYPE_ARRAY_CONFIG_TYPE_EMAIL     FieldTypeArrayConfigType = 7
	FieldTypeArrayConfigType_FIELD_TYPE_ARRAY_CONFIG_TYPE_PHONE     FieldTypeArrayConfigType = 8
	FieldTypeArrayConfigType_FIELD_TYPE_ARRAY_CONFIG_TYPE_URL       FieldTypeArrayConfigType = 9
	FieldTypeArrayConfigType_FIELD_TYPE_ARRAY_CONFIG_TYPE_COLOR     FieldTypeArrayConfigType = 10
	FieldTypeArrayConfigType_FIELD_TYPE_ARRAY_CONFIG_TYPE_DATE      FieldTypeArrayConfigType = 11
	FieldTypeArrayConfigType_FIELD_TYPE_ARRAY_CONFIG_TYPE_DATETIME  FieldTypeArrayConfigType = 12
	FieldTypeArrayConfigType_FIELD_TYPE_ARRAY_CONFIG_TYPE_ENCRYPTED FieldTypeArrayConfigType = 13
	FieldTypeArrayConfigType_FIELD_TYPE_ARRAY_CONFIG_TYPE_TIME      FieldTypeArrayConfigType = 14
	FieldTypeArrayConfigType_FIELD_TYPE_ARRAY_CONFIG_TYPE_ENUM      FieldTypeArrayConfigType = 15
)

// Enum value maps for FieldTypeArrayConfigType.
var (
	FieldTypeArrayConfigType_name = map[int32]string{
		0:  "FIELD_TYPE_ARRAY_CONFIG_TYPE_INVALID",
		1:  "FIELD_TYPE_ARRAY_CONFIG_TYPE_UUID",
		2:  "FIELD_TYPE_ARRAY_CONFIG_TYPE_INTEGER",
		3:  "FIELD_TYPE_ARRAY_CONFIG_TYPE_FLOAT",
		4:  "FIELD_TYPE_ARRAY_CONFIG_TYPE_DECIMAL",
		5:  "FIELD_TYPE_ARRAY_CONFIG_TYPE_CHAR",
		6:  "FIELD_TYPE_ARRAY_CONFIG_TYPE_VARCHAR",
		7:  "FIELD_TYPE_ARRAY_CONFIG_TYPE_EMAIL",
		8:  "FIELD_TYPE_ARRAY_CONFIG_TYPE_PHONE",
		9:  "FIELD_TYPE_ARRAY_CONFIG_TYPE_URL",
		10: "FIELD_TYPE_ARRAY_CONFIG_TYPE_COLOR",
		11: "FIELD_TYPE_ARRAY_CONFIG_TYPE_DATE",
		12: "FIELD_TYPE_ARRAY_CONFIG_TYPE_DATETIME",
		13: "FIELD_TYPE_ARRAY_CONFIG_TYPE_ENCRYPTED",
		14: "FIELD_TYPE_ARRAY_CONFIG_TYPE_TIME",
		15: "FIELD_TYPE_ARRAY_CONFIG_TYPE_ENUM",
	}
	FieldTypeArrayConfigType_value = map[string]int32{
		"FIELD_TYPE_ARRAY_CONFIG_TYPE_INVALID":   0,
		"FIELD_TYPE_ARRAY_CONFIG_TYPE_UUID":      1,
		"FIELD_TYPE_ARRAY_CONFIG_TYPE_INTEGER":   2,
		"FIELD_TYPE_ARRAY_CONFIG_TYPE_FLOAT":     3,
		"FIELD_TYPE_ARRAY_CONFIG_TYPE_DECIMAL":   4,
		"FIELD_TYPE_ARRAY_CONFIG_TYPE_CHAR":      5,
		"FIELD_TYPE_ARRAY_CONFIG_TYPE_VARCHAR":   6,
		"FIELD_TYPE_ARRAY_CONFIG_TYPE_EMAIL":     7,
		"FIELD_TYPE_ARRAY_CONFIG_TYPE_PHONE":     8,
		"FIELD_TYPE_ARRAY_CONFIG_TYPE_URL":       9,
		"FIELD_TYPE_ARRAY_CONFIG_TYPE_COLOR":     10,
		"FIELD_TYPE_ARRAY_CONFIG_TYPE_DATE":      11,
		"FIELD_TYPE_ARRAY_CONFIG_TYPE_DATETIME":  12,
		"FIELD_TYPE_ARRAY_CONFIG_TYPE_ENCRYPTED": 13,
		"FIELD_TYPE_ARRAY_CONFIG_TYPE_TIME":      14,
		"FIELD_TYPE_ARRAY_CONFIG_TYPE_ENUM":      15,
	}
)

func (x FieldTypeArrayConfigType) Enum() *FieldTypeArrayConfigType {
	p := new(FieldTypeArrayConfigType)
	*p = x
	return p
}

func (x FieldTypeArrayConfigType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldTypeArrayConfigType) Descriptor() protoreflect.EnumDescriptor {
	return file_field_type_array_config_proto_enumTypes[0].Descriptor()
}

func (FieldTypeArrayConfigType) Type() protoreflect.EnumType {
	return &file_field_type_array_config_proto_enumTypes[0]
}

func (x FieldTypeArrayConfigType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldTypeArrayConfigType.Descriptor instead.
func (FieldTypeArrayConfigType) EnumDescriptor() ([]byte, []int) {
	return file_field_type_array_config_proto_rawDescGZIP(), []int{0}
}

type FieldTypeArrayConfig struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	MinElements   int64                    `protobuf:"varint,1,opt,name=min_elements,json=minElements,proto3" json:"min_elements,omitempty"`
	MaxElements   int64                    `protobuf:"varint,2,opt,name=max_elements,json=maxElements,proto3" json:"max_elements,omitempty"`
	EnforceUnique bool                     `protobuf:"varint,3,opt,name=enforce_unique,json=enforceUnique,proto3" json:"enforce_unique,omitempty"`
	Type          FieldTypeArrayConfigType `protobuf:"varint,4,opt,name=type,proto3,enum=nem.FieldTypeArrayConfigType" json:"type,omitempty"`
	TypeConfig    *ArrayTypeConfig         `protobuf:"bytes,5,opt,name=type_config,json=typeConfig,proto3" json:"type_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldTypeArrayConfig) Reset() {
	*x = FieldTypeArrayConfig{}
	mi := &file_field_type_array_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldTypeArrayConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldTypeArrayConfig) ProtoMessage() {}

func (x *FieldTypeArrayConfig) ProtoReflect() protoreflect.Message {
	mi := &file_field_type_array_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldTypeArrayConfig.ProtoReflect.Descriptor instead.
func (*FieldTypeArrayConfig) Descriptor() ([]byte, []int) {
	return file_field_type_array_config_proto_rawDescGZIP(), []int{0}
}

func (x *FieldTypeArrayConfig) GetMinElements() int64 {
	if x != nil {
		return x.MinElements
	}
	return 0
}

func (x *FieldTypeArrayConfig) GetMaxElements() int64 {
	if x != nil {
		return x.MaxElements
	}
	return 0
}

func (x *FieldTypeArrayConfig) GetEnforceUnique() bool {
	if x != nil {
		return x.EnforceUnique
	}
	return false
}

func (x *FieldTypeArrayConfig) GetType() FieldTypeArrayConfigType {
	if x != nil {
		return x.Type
	}
	return FieldTypeArrayConfigType_FIELD_TYPE_ARRAY_CONFIG_TYPE_INVALID
}

func (x *FieldTypeArrayConfig) GetTypeConfig() *ArrayTypeConfig {
	if x != nil {
		return x.TypeConfig
	}
	return nil
}

var File_field_type_array_config_proto protoreflect.FileDescriptor

var file_field_type_array_config_proto_rawDesc = string([]byte{
	0x0a, 0x1d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x61, 0x72, 0x72,
	0x61, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x6e, 0x65, 0x6d, 0x1a, 0x17, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xed, 0x01,
	0x0a, 0x14, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x69, 0x6e, 0x5f, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x69,
	0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78,
	0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6d, 0x61, 0x78, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x55, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x6e, 0x65, 0x6d, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6e, 0x65,
	0x6d, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2a, 0xa2, 0x05,
	0x0a, 0x18, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x24, 0x46, 0x49,
	0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x5f, 0x43,
	0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x21, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x55, 0x49, 0x44, 0x10, 0x01, 0x12, 0x28, 0x0a, 0x24, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x5f,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45,
	0x47, 0x45, 0x52, 0x10, 0x02, 0x12, 0x26, 0x0a, 0x22, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x03, 0x12, 0x28, 0x0a,
	0x24, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41,
	0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45,
	0x43, 0x49, 0x4d, 0x41, 0x4c, 0x10, 0x04, 0x12, 0x25, 0x0a, 0x21, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x52, 0x10, 0x05, 0x12, 0x28,
	0x0a, 0x24, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x52, 0x52,
	0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56,
	0x41, 0x52, 0x43, 0x48, 0x41, 0x52, 0x10, 0x06, 0x12, 0x26, 0x0a, 0x22, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x07,
	0x12, 0x26, 0x0a, 0x22, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41,
	0x52, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x10, 0x08, 0x12, 0x24, 0x0a, 0x20, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x52, 0x4c, 0x10, 0x09, 0x12, 0x26,
	0x0a, 0x22, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x52, 0x52,
	0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43,
	0x4f, 0x4c, 0x4f, 0x52, 0x10, 0x0a, 0x12, 0x25, 0x0a, 0x21, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x0b, 0x12, 0x29, 0x0a,
	0x25, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41,
	0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41,
	0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x0c, 0x12, 0x2a, 0x0a, 0x26, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54,
	0x45, 0x44, 0x10, 0x0d, 0x12, 0x25, 0x0a, 0x21, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x0e, 0x12, 0x25, 0x0a, 0x21, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x5f,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x55, 0x4d,
	0x10, 0x0f, 0x42, 0x2a, 0x0a, 0x03, 0x6e, 0x65, 0x6d, 0x42, 0x14, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x41, 0x72, 0x72, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50,
	0x01, 0x5a, 0x0b, 0x6e, 0x65, 0x6d, 0x2f, 0x69, 0x64, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_field_type_array_config_proto_rawDescOnce sync.Once
	file_field_type_array_config_proto_rawDescData []byte
)

func file_field_type_array_config_proto_rawDescGZIP() []byte {
	file_field_type_array_config_proto_rawDescOnce.Do(func() {
		file_field_type_array_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_field_type_array_config_proto_rawDesc), len(file_field_type_array_config_proto_rawDesc)))
	})
	return file_field_type_array_config_proto_rawDescData
}

var file_field_type_array_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_field_type_array_config_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_field_type_array_config_proto_goTypes = []any{
	(FieldTypeArrayConfigType)(0), // 0: nem.FieldTypeArrayConfigType
	(*FieldTypeArrayConfig)(nil),  // 1: nem.FieldTypeArrayConfig
	(*ArrayTypeConfig)(nil),       // 2: nem.ArrayTypeConfig
}
var file_field_type_array_config_proto_depIdxs = []int32{
	0, // 0: nem.FieldTypeArrayConfig.type:type_name -> nem.FieldTypeArrayConfigType
	2, // 1: nem.FieldTypeArrayConfig.type_config:type_name -> nem.ArrayTypeConfig
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_field_type_array_config_proto_init() }
func file_field_type_array_config_proto_init() {
	if File_field_type_array_config_proto != nil {
		return
	}
	file_array_type_config_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_field_type_array_config_proto_rawDesc), len(file_field_type_array_config_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_field_type_array_config_proto_goTypes,
		DependencyIndexes: file_field_type_array_config_proto_depIdxs,
		EnumInfos:         file_field_type_array_config_proto_enumTypes,
		MessageInfos:      file_field_type_array_config_proto_msgTypes,
	}.Build()
	File_field_type_array_config_proto = out.File
	file_field_type_array_config_proto_goTypes = nil
	file_field_type_array_config_proto_depIdxs = nil
}
